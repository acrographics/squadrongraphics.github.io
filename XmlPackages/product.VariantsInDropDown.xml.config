<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Drop Down" debug="false" includeentityhelper="true">

	<!-- ###################################################################################################### -->
	<!-- Copyright AspDotNetStorefront.com, 1995-2007.  All Rights Reserved.					                -->
	<!-- http://www.aspdotnetstorefront.com														                -->
	<!-- For details on this license please visit  the product homepage at the URL above.		                -->
	<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
	<!-- $Header: /v6.1/Web/XmlPackages/entity.grid.xml.config 1     12/30/05 2:33p Administrator $	            -->
	<!--                                                                                                        -->
	<!-- ###################################################################################################### -->


    <query name="Products" rowElementName="Product">
        <sql>
            <![CDATA[
				select p.*, sp.name as SalesPromptName
				from product p
					join salesprompt sp on p.SalesPromptID = sp.SalesPromptID
				where p.ProductID=@ProductID and p.Deleted=0 and p.Published = 1
            ]]>
        </sql>
        <queryparam paramname="@ProductID" paramtype="request" requestparamname="ProductID" sqlDataType="int" defvalue="0"  validationpattern="" />
    </query>

    <query name="ProductVariants" rowElementName="Variant">
        <sql>
            <![CDATA[
                select pv.VariantID, pv.Name, pv.Price, pv.Description, pv.ProductID, pv.Deleted, pv.MinimumQuantity,
                pv.Published, pv.Points, pv.IsDefault, pv.DisplayOrder,
                case when pv.SalePrice is null then 0 else isnull(pv.SalePrice, 0) end SalePrice, case when pcl.productid is null then 0 else isnull(e.Price, 0) end ExtendedPrice
                from productvariant pv
                    left join ExtendedPrice e on pv.VariantID=e.VariantID and e.CustomerLevelID=@CustomerLevelID
                    left join ProductCustomerLevel pcl with (NOLOCK) on pcl.ProductID = @ProductID and pcl.CustomerLevelID = @CustomerLevelID
                where pv.ProductID=@ProductID and pv.Deleted=0  and pv.Published = 1 ORDER BY pv.IsDefault DESC, pv.DisplayOrder ASC
            ]]>
        </sql>
        <queryparam paramname="@CustomerLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
        <queryparam paramname="@ProductID" paramtype="request" requestparamname="ProductID" sqlDataType="int" defvalue="0"  validationpattern="" />
    </query>

  <PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
      <xsl:output method="html" omit-xml-declaration="yes" />

      <xsl:param name="defaultVariant" select="/root/ProductVariants/Variant[IsDefault=1]/VariantID"></xsl:param>
      <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
      <xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />
      <xsl:param name="XmlPackageName" select="/root/System/XmlPackageName" />


      <xsl:param name="SecID">
        <xsl:choose>
          <xsl:when test="count(/root/QueryString/SectionID) &gt; 0">
            <xsl:value-of select="/root/QueryString/SectionID" />
          </xsl:when>
          <xsl:otherwise>0</xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <xsl:param name="CatID">
        <xsl:choose>
          <xsl:when test="count(/root/QueryString/CategoryID) &gt; 0">
            <xsl:value-of select="/root/QueryString/CategoryID" />
          </xsl:when>
          <xsl:otherwise>0</xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <xsl:template match="/">
        <SCRIPT LANGUAGE="JavaScript">
            var VarMinQty = new Array();
            <xsl:for-each select="/root/ProductVariants/Variant">
                VarMinQty[<xsl:value-of select="VariantID" />] = <xsl:value-of select="MinimumQuantity" />;
        </xsl:for-each>

            <![CDATA[
                    function SetCartVariant(selValue, prodid, varid){
                        //alert("AddToCartForm_"+prodid+"_"+varid);
                        var theForm = document.forms["AddToCartForm_"+prodid+"_"+varid];
                        if(selValue==''){
                            alert('Please select a variant to add to the cart'); 
                            return false;
                        }
                        else {
                            theForm.VariantID.value=selValue;
                            VariantMinimumQty = VarMinQty[selValue];
                        }
                    }
            ]]>
        </SCRIPT>
        <xsl:comment>Copyright 1995-2007 AspDotNetStorefront.com</xsl:comment>
        <xsl:apply-templates select="/root/Products/Product" />
      </xsl:template>


      <xsl:template match="Product">
        <xsl:param name="pName">
          <xsl:choose>
            <xsl:when test="count(Name/ml/locale[@name=$LocaleSetting])!=0">
              <xsl:value-of select="Name/ml/locale[@name=$LocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(Name/ml/locale[@name=$WebConfigLocaleSetting]) !=0 ">
              <xsl:value-of select="Name/ml/locale[@name=$WebConfigLocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(Name/ml)=0">
              <xsl:value-of select="Name"/>
            </xsl:when>
          </xsl:choose>
        </xsl:param>

        <xsl:param name="pDescription">
          <xsl:choose>
            <xsl:when test="count(Description/ml/locale[@name=$LocaleSetting])!=0">
              <xsl:value-of select="Description/ml/locale[@name=$LocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(Description/ml/locale[@name=$WebConfigLocaleSetting])!=0">
              <xsl:value-of select="Description/ml/locale[@name=$WebConfigLocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(Description/ml)=0">
              <xsl:value-of select="Description"/>
            </xsl:when>
          </xsl:choose>
        </xsl:param>

        <xsl:choose>
          <xsl:when test="IsAKit=1">
            <table border="0" width="100%" cellpadding="4" cellspacing="0">
              <tr>
                <td align="left" valign="top">
                  <xsl:value-of select="aspdnsf:LookupImage(ProductID, 'product', 'medium', 1)" disable-output-escaping="yes"/>
                </td>
                <td align="left" valign="top" width="100%">
                  <div>
                    <table width="100%" cellpadding="0" cellspacing="0">
                      <tr>
                        <td width="100%" align="left" valign="middle">
                          <span class="ProductNameText">
                            <xsl:value-of select="$pName" disable-output-escaping="yes" />
                          </span>
                        </td>
                        <td align="right" valign="Middle">
                          <nobr>
                            <xsl:value-of select="aspdnsf:ProductNavLinks(ProductID, $CatID, $SecID)" disable-output-escaping="yes" />
                          </nobr>
                        </td>
                      </tr>
                    </table>
                  </div>
                  <div>
                    <br />
                  </div>
                  <div>
                    <b>
                      <font color="red">
                        Display of Kit Products is not supported by this XmlPackage.<br /><br />XmlPackage=<xsl:value-of select="$XmlPackageName" />
                      </font>
                    </b>
                  </div>
                </td>
              </tr>
            </table>
          </xsl:when>
          <xsl:when test="IsAPack=1">
            <table border="0" width="100%" cellpadding="4" cellspacing="0">
              <tr>
                <td align="left" valign="top">
                  <xsl:value-of select="aspdnsf:LookupImage(ProductID, 'product', 'medium', 1)" disable-output-escaping="yes"/>
                </td>
                <td align="left" valign="top" width="100%">
                  <div>
                    <table width="100%" cellpadding="0" cellspacing="0">
                      <tr>
                        <td width="100%" align="left" valign="middle">
                          <span class="ProductNameText">
                            <xsl:value-of select="$pName" disable-output-escaping="yes" />
                          </span>
                        </td>
                        <td align="right" valign="Middle">
                          <nobr>
                            <xsl:value-of select="aspdnsf:ProductNavLinks(ProductID, $CatID, $SecID)" disable-output-escaping="yes" />
                          </nobr>
                        </td>
                      </tr>
                    </table>
                  </div>
                  <div>
                    <br />
                  </div>
                  <div>
                    <b>
                      <font color="red">
                        Display of Pack Products is not supported by this XmlPackage.<br /><br />XmlPackage=<xsl:value-of select="$XmlPackageName" />
                      </font>
                    </b>
                  </div>
                </td>
              </tr>
            </table>
          </xsl:when>
          <xsl:otherwise>
            <table border="0" width="100%" cellpadding="4" cellspacing="0">
              <tr>
                <td align="left" valign="top">
                  <xsl:value-of select="aspdnsf:LookupImage(ProductID, 'product', 'medium', 1)" disable-output-escaping="yes"/>
                </td>
                <td align="left" valign="top" width="100%">
                  <div>
                    <table width="100%" cellpadding="0" cellspacing="0">
                      <tr>
                        <td width="100%" align="left" valign="middle">
                          <span class="ProductNameText">
                            <xsl:value-of select="$pName" disable-output-escaping="yes" />
                          </span>
                          <br/>
                        </td>
                        <td align="right" valign="Middle">
                          <nobr>
                            <xsl:value-of select="aspdnsf:ProductNavLinks(ProductID, $CatID, $SecID)" disable-output-escaping="yes" />
                            <xsl:value-of select="aspdnsf:EmailProductToFriend(ProductID, $CatID)" disable-output-escaping="yes"/>
                          </nobr>
                        </td>
                      </tr>
                    </table>
                  </div>
                  <div>
                  </div>
                  <div>
                    <xsl:value-of select="$pDescription" disable-output-escaping="yes"/>
                    <br/>
                    <br/>
                  </div>
                  <div>
                  </div>
                  <div>
                    Options: <select name="variants" onchange="{concat('SetCartVariant(this.value,', ProductID, ', ', $defaultVariant, ')')}">
                      <xsl:apply-templates select="/root/ProductVariants/Variant" />
                    </select>
                    <div>
                      <br/>
                    </div>
                    <xsl:value-of select="aspdnsf:AddtoCartForm(ProductID, $defaultVariant, 1)" disable-output-escaping="yes"/>
                  </div>
                </td>
              </tr>
              <tr>
                <td colspan="2">
                  <xsl:value-of select="aspdnsf:RelatedProducts(ProductID)" disable-output-escaping="yes"/>
                </td>
              </tr>
              <tr>
                <td colspan="2">
                  <xsl:value-of select="aspdnsf:ShowUpsellProducts(ProductID)" disable-output-escaping="yes"/>
                </td>
              </tr>
              <tr>
                <td colspan="2">
                  <xsl:value-of select="aspdnsf:ProductSpecs(ProductID, 1)" disable-output-escaping="yes"/>
                </td>
              </tr>
              <tr>
                <td colspan="2">
                  <xsl:value-of select="aspdnsf:ProductRatings(ProductID, 0, 0, 0, 1)" disable-output-escaping="yes"/>
                </td>
              </tr>
            </table>

            <xsl:value-of select="aspdnsf:Topic('imagepricetable')" disable-output-escaping="yes" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>


      <xsl:template match="Variant">
        <xsl:param name="vName">
          <xsl:choose>
            <xsl:when test="count(Name/ml/locale[@name=$LocaleSetting])!=0">
              <xsl:value-of select="Name/ml/locale[@name=$LocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(Name/ml/locale[@name=$WebConfigLocaleSetting]) !=0 ">
              <xsl:value-of select="Name/ml/locale[@name=$WebConfigLocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(Name/ml)=0">
              <xsl:value-of select="Name"/>
            </xsl:when>
          </xsl:choose>
        </xsl:param>
        <xsl:param name="pSalesPromptName">
            <xsl:choose>
                <xsl:when test="count(/root/Products/Product/SalesPromptName/ml/locale[@name=$LocaleSetting])!=0">
                    <xsl:value-of select="SalesPromptName/ml/locale[@name=$LocaleSetting]"/>
                </xsl:when>
                <xsl:when test="count(/root/Products/Product/SalesPromptName/ml/locale[@name=$WebConfigLocaleSetting])!=0">
                    <xsl:value-of select="/root/Products/Product/SalesPromptName/ml/locale[@name=$WebConfigLocaleSetting]"/>
                </xsl:when>
                <xsl:when test="count(/root/Products/Product/SalesPromptName/ml)=0">
                    <xsl:value-of select="/root/Products/Product/SalesPromptName"/>
                </xsl:when>
            </xsl:choose>
        </xsl:param>
        <xsl:param name="pTaxClassID">
          <xsl:choose>
            <xsl:when test="count(/root/Products/Product/TaxClassID/ml/locale[@name=$LocaleSetting])!=0">
              <xsl:value-of select="SalesPromptName/ml/locale[@name=$LocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(/root/Products/Product/TaxClassID/ml/locale[@name=$WebConfigLocaleSetting])!=0">
              <xsl:value-of select="/root/Products/Product/TaxClassID/ml/locale[@name=$WebConfigLocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(/root/Products/Product/TaxClassID/ml)=0">
              <xsl:value-of select="/root/Products/Product/TaxClassID"/>
            </xsl:when>
          </xsl:choose>
        </xsl:param>
        <xsl:param name="pSalePrice">
          <xsl:choose>
            <xsl:when test="count(/root/Products/Product/TaxClassID/ml/locale[@name=$LocaleSetting])!=0">
              <xsl:value-of select="SalesPromptName/ml/locale[@name=$LocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(/root/Products/Product/TaxClassID/ml/locale[@name=$WebConfigLocaleSetting])!=0">
              <xsl:value-of select="/root/Products/Product/TaxClassID/ml/locale[@name=$WebConfigLocaleSetting]"/>
            </xsl:when>
            <xsl:when test="count(/root/Products/Product/TaxClassID/ml)=0">
              <xsl:value-of select="/root/Products/Product/TaxClassID"/>
            </xsl:when>
          </xsl:choose>
        </xsl:param>
        <option value="{VariantID}">
          <xsl:if test="IsDefault=1">
            <xsl:attribute name="selected">selected</xsl:attribute>
          </xsl:if>
          <xsl:value-of select="$vName" />&#0160;-&#0160;<xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, number(HidePriceUntilCart), Price, SalePrice, ExtendedPrice, Points, $pSalesPromptName, $pTaxClassID)" disable-output-escaping="yes" />
        </option>
      </xsl:template>
    </xsl:stylesheet>
</PackageTransform>
</package>