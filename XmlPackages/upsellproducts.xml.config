<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Upsell Products" debug="false" includeentityhelper="false">

    <!-- ###################################################################################################### -->
    <!-- Copyright AspDotNetStorefront.com, 1995-2007.  All Rights Reserved.					                -->
    <!-- http://www.aspdotnetstorefront.com														                -->
    <!-- For details on this license please visit  the product homepage at the URL above.		                -->
    <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
    <!-- $Header: /Web/XmlPackages/minicart.xml.config 1                12/30/05 2:33p Administrator $	        -->
    <!--                                                                                                        -->
    <!-- ###################################################################################################### -->


    <query name="UpsellProducts" rowElementName="Product" runif="productid">
        <sql>
            <![CDATA[
            declare @UpsellProducts varchar(8000), @UpsellProductDiscPct money
            select @UpsellProducts = replace(cast(UpsellProducts as varchar(8000)), ' ', ''), @UpsellProductDiscPct = UpsellProductDiscountPercentage from dbo.product where productid = @productid
            select 1-(@UpsellProductDiscPct/100) UpsellDiscMultiplier, p.*, pv.VariantID, pv.Price , isnull(pv.SalePrice, 0) SalePrice, isnull(pv.Points, 0) Points, sp.Name SalesPromptName, isnull(ep.price, 0) ExtendedPrice
            from dbo.product p  with (nolock) 
                join dbo.split(@UpsellProducts, ',') up on p.productid = cast(up.items as int)
                left join dbo.SalesPrompt sp  with (nolock) on sp.SalesPromptID = p.SalesPromptID
                join dbo.productvariant pv  with (nolock) on pv.productid = cast(up.items as int) and pv.isdefault = 1
                left join dbo.ExtendedPrice ep  with (nolock) on ep.VariantID = pv.VariantID and ep.CustomerLevelID = @CustomerLevelID
            ]]>
            </sql>
            <queryparam paramname="@productid" paramtype="runtime" requestparamname="productid" sqlDataType="int" defvalue="0"  validationpattern="" />
            <queryparam paramname="@CustomerLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
        </query>

        <query name="UpsellProductsCart" rowElementName="CartProduct" runif="cart">
            <sql>
                <![CDATA[
            declare @UpsellProducts varchar(8000), @UpsellProductDiscPct money
            set @UpsellProducts = ''
            select  @UpsellProducts = @UpsellProducts + replace(isnull(cast(UpsellProducts as varchar(8000)), ''), ' ', '') + ',' 
            from dbo.shoppingcart sc join dbo.product p on sc.productid = p.productid 
            where customerid = @CustomerID

            select p.ProductID, p.Name, p.SEName, p.Summary, p.Description, rtrim(pv.Name) VariantName, p.SEName, p.ImageFileNameOverride, p.TaxClassID,
                   p.SKU, pv.VariantID, p.HidePriceUntilCart, pv.Price, isnull(pv.SalePrice, 0) SalePrice, isnull(ep.Price, 0) ExtendedPrice, pv.Points, 
                   sp.Name SalesPromptName
            from dbo.product p  with (nolock) 
                join dbo.productvariant pv  with (nolock) on p.productid = pv.productid  
                join (select distinct items from dbo.split(@UpsellProducts , ',') where rtrim(items) <> '') up on p.productid = cast(up.items as int)
                left join dbo.SalesPrompt sp  with (nolock) on p.SalesPromptID = sp.SalesPromptID
                left join dbo.ExtendedPrice ep  with (nolock) on ep.VariantID = pv.VariantID and ep.CustomerLevelID = @CustomerLevelID
            where (RequiresTextOption IS NULL or RequiresTextOption=0) 
                and (Sizes IS NULL or Sizes like '') 
                and (Colors IS NULL or Colors like '') 
                and IsAKit=0 and IsAPack=0 
                and p.ProductID not in (select ProductID from ShoppingCart  with (nolock) where CartType=0 and CustomerID=@CustomerID)

            ]]>
        </sql>
        <queryparam paramname="@CustomerID"      paramtype="runtime" requestparamname="CustomerID"      sqlDataType="int" defvalue="0"  validationpattern="" />
        <queryparam paramname="@CustomerLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
    </query>


    <PackageTransform>
        <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
                        xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
            <xsl:output method="html" omit-xml-declaration="yes" />

            <xsl:param name="UpsellProductsGridColWidth" select="aspdnsf:AppConfig('UpsellProductsGridColWidth')"></xsl:param>
            <xsl:param name="UpsellProductsCount" select="count(/root/UpsellProducts/Product)"></xsl:param>


            <xsl:template match="/">

                <xsl:if test="number($UpsellProductsCount) &gt; 0">
                    <script type="text/javascript">
                        <![CDATA[
                        function UpsellClick(theItem)
                        {
                            var UpsellItemList = '';
                            var whichitem = 0;
                            var UpsellList = document.getElementsByName('Upsell');
							var UpsellProductList = document.getElementsByName('UpsellProducts');							
                            for (i=0; i<UpsellList.length; i++)
                            {
                                if (UpsellList[i].checked && UpsellList[i].value != '0')
                                {
                                    if (UpsellItemList.length > 0)
                                    {
                                        UpsellItemList = UpsellItemList + ',';
                                    }
                                    UpsellItemList = UpsellItemList + UpsellList[i].value;
                                }
                            }
							
							for(j=0; j<UpsellProductList.length; j++)
							{
								UpsellProductList[j].value = UpsellItemList;
							}	
                        }
                    ]]>
                    </script>

                    <table width="100%" cellpadding="2" cellspacing="0" border="0" style="border-style: solid; border-width: 0px; border-color: #{aspdnsf:AppConfig('HeaderBGColor')};" >
                        <tr>
                            <td align="left" valign="top">
                                <img src="{aspdnsf:LocateImageURL(concat('skins/Skin_', /root/System/SkinID, '/images/Upsellproducts.gif'))}" border="0"/>
                                <br/>
                                <table width="100%" height="141" cellpadding="4" cellspacing="0" border="0" style="{aspdnsf:AppConfig('BoxFrameStyle')}">
                                    <tr>
                                        <td align="left" valign="top" class="RelatedProductsBoxStyle">
                                            <xsl:choose>
                                                <xsl:when test="/root/Runtime/teaser != ''">
                                                    <p>
                                                        <b>
                                                            <xsl:value-of select="/root/Runtime/teaser" />
                                                        </b>
                                                    </p>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:value-of select="aspdnsf:Topic('UpsellTeaser')" disable-output-escaping="yes" />
                                                </xsl:otherwise>
                                            </xsl:choose>

                                            <xsl:choose>
                                                <xsl:when test="aspdnsf:StrToLower(aspdnsf:AppConfig('RelatedProductsFormat')) = 'grid'">
                                                    <xsl:apply-templates select="/root/UpsellProducts/Product" />
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <table width="100%">
                                                        <xsl:for-each select="/root/UpsellProducts/Product">
                                                            <tr>
                                                                <td width="100%">
                                                                    <table width="100%">
                                                                        <tr>
                                                                            <td valign="center">
                                                                                <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                    <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFileNameOverride, SKU, 'icon', 0)" disable-output-escaping="yes"/>
                                                                                </a>
                                                                            </td>
                                                                            <td width="100%">
                                                                                <table width="100%">
                                                                                    <tr>
                                                                                        <td>
                                                                                            <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                                <xsl:value-of select="aspdnsf:GetMLValue(Name)" disable-output-escaping="yes" />
                                                                                            </a>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <span class="a2">
                                                                                                <xsl:value-of select="aspdnsf:GetMLValue(Description)" disable-output-escaping="yes" />
                                                                                            </span>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <div class="a1" style="PADDING-BOTTOM: 10px; PADDING-TOP: 10px;">
                                                                                                <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                                    <xsl:value-of select="aspdnsf:StringResource('common.cs.33')" disable-output-escaping="yes" />
                                                                                                </a>
                                                                                            </div>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
<!--                                                                                            <input type="checkbox" id="Upsell" name="Upsell" value="{ProductID}" onClick="UpsellClick(this);" />
-->                                                                                        </td>
                                                                                    </tr>
                                                                                </table>
                                                                            </td>
                                                                        </tr>
                                                                    </table>
                                                                    <xsl:if test="position() != last()">
                                                                        <hr size="1" class="LightCellText"/>Add this beautiful brass or silver plate to any framed print!
                                                                    </xsl:if>
                                                                </td>
                                                            </tr>
                                                        </xsl:for-each>
                                                    </table>
                                                </xsl:otherwise>
                                            </xsl:choose>

                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </xsl:if>

                <xsl:if test="count(/root/UpsellProductsCart/CartProduct) &gt; 0">
                    <table width="100%" cellpadding="2" cellspacing="0" border="0" style="border-style: solid; border-width: 0px; border-color: #{aspdnsf:AppConfig('HeaderBGColor')};" >
                        <tr>
                            <td align="left" valign="top">
                                <img src="{aspdnsf:LocateImageURL(concat('skins/Skin_', /root/System/SkinID, '/images/ShoppingCartUpsell.gif'))}" border="0"/>
                                <br/>
                                <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{aspdnsf:AppConfig('BoxFrameStyle')}">
                                    <tr>
                                        <td align="left" valign="top" class="RelatedProductsBoxStyle">
                                            <xsl:choose>
                                                <xsl:when test="/root/Runtime/teaser != ''">
                                                    <p>
                                                        <b>
                                                            <xsl:value-of select="/root/Runtime/teaser" />
                                                        </b>
                                                    </p>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:value-of select="aspdnsf:Topic('UpsellTeaser')" disable-output-escaping="yes" />
                                                </xsl:otherwise>
                                            </xsl:choose>

                                            <xsl:choose>
                                                <xsl:when test="aspdnsf:StrToLower(aspdnsf:AppConfig('RelatedProductsFormat')) = 'grid'">
                                                    <xsl:apply-templates select="/root/UpsellProductsCart/CartProduct" />
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <table width="100%">
                                                        <xsl:for-each select="/root/UpsellProductsCart/CartProduct">
                                                            <tr>
                                                                <td width="100%">
                                                                    <table width="100%">
                                                                        <tr>
                                                                            <td valign="center">
                                                                                <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                    <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFileNameOverride, SKU, 'icon', 0)" disable-output-escaping="yes"/>
                                                                                </a>
                                                                            </td>
                                                                            <td width="100%">
                                                                                <table width="100%">
                                                                                    <tr>
                                                                                        <td>
                                                                                            <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                                <xsl:value-of select="aspdnsf:GetMLValue(Name)" disable-output-escaping="yes" />
                                                                                            </a>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <span class="a2">
                                                                                                <xsl:value-of select="aspdnsf:GetMLValue(Description)" disable-output-escaping="yes" />
                                                                                            </span>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, HidePriceUntilCart, Price, SalePrice, ExtendedPrice, Points, SalesPromptName, 1, TaxClassID)" disable-output-escaping="yes" />
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
<!--                                                                                            <input type="checkbox" id="Upsell" name="Upsell" value="{ProductID}" onClick="UpsellClick(this);" />
-->                                                                                        </td>
                                                                                    </tr>
                                                                                </table>
                                                                            </td>
                                                                        </tr>
                                                                    </table>
                                                                    <xsl:if test="position() != last()">
                                                                        <hr size="1" class="LightCellText"/>
                                                                    </xsl:if>
                                                                </td>
                                                            </tr>
                                                        </xsl:for-each>
                                                    </table>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </xsl:if>
            </xsl:template>

            <xsl:template match="CartProduct">
                <xsl:variable name="delta">
                    <xsl:choose>
                        <xsl:when test="(count(/root/UpsellProductsCart/CartProduct) mod number($UpsellProductsGridColWidth)) = 0">0</xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="number($UpsellProductsGridColWidth)-(count(/root/UpsellProductsCart/CartProduct) mod number($UpsellProductsGridColWidth))"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="rows" select="ceiling(count(/root/UpsellProductsCart/CartProduct) div number($UpsellProductsGridColWidth))" />

                <xsl:if test="position() mod $UpsellProductsGridColWidth = 1">
                    <tr>
                        <xsl:for-each select=". | following-sibling::*[position() &lt; $UpsellProductsGridColWidth]">
                            <xsl:call-template name="ProductCell"></xsl:call-template>
                        </xsl:for-each>
                        <xsl:if test="ceiling(position() div  number($UpsellProductsGridColWidth)) = $rows and $delta &gt; 0">
                            <xsl:call-template name="FillerCells">
                                <xsl:with-param name="cellCount" select="$delta" />
                            </xsl:call-template>
                        </xsl:if>
                    </tr>
                </xsl:if>

            </xsl:template>


            <xsl:template match="Product">
                <xsl:variable name="delta">
                    <xsl:choose>
                        <xsl:when test="(count(/root/UpsellProducts/Product) mod number($UpsellProductsGridColWidth)) = 0">0</xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="number($UpsellProductsGridColWidth)-(count(/root/UpsellProducts/Product) mod number($UpsellProductsGridColWidth))"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="rows" select="ceiling(count(/root/UpsellProducts/Product) div number($UpsellProductsGridColWidth))" />

                <xsl:if test="position() mod $UpsellProductsGridColWidth = 1">
                    <tr>
                        <xsl:for-each select=". | following-sibling::*[position() &lt; $UpsellProductsGridColWidth]">
                            <xsl:call-template name="ProductCell"></xsl:call-template>
                        </xsl:for-each>
                        <xsl:if test="ceiling(position() div  number($UpsellProductsGridColWidth)) = $rows and $delta &gt; 0">
                            <xsl:call-template name="FillerCells">
                                <xsl:with-param name="cellCount" select="$delta" />
                            </xsl:call-template>
                        </xsl:if>
                    </tr>
                </xsl:if>

            </xsl:template>


            <xsl:template name="ProductCell">

                <xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>


                <td align="center" valign="top">
                    <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                        <xsl:value-of select="aspdnsf:LookupImage(ProductID, 'product', 'icon', 1)" disable-output-escaping="yes"/>
                    </a>
                    <br/>
                    <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                        <xsl:value-of select="$pName" disable-output-escaping="yes"/>
                    </a>
                    <br/>
                    <xsl:choose>
                        <xsl:when test="number(/root/Runtime/cart)=1">
                            <xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, HidePriceUntilCart, Price, SalePrice, ExtendedPrice, Points, aspdnsf:GetMLValue(SalesPromptName), 0, TaxClassID)" disable-output-escaping="yes" />
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="aspdnsf:GetUpsellVariantPrice(VariantID, HidePriceUntilCart, Price, SalePrice, ExtendedPrice, Points, aspdnsf:GetMLValue(SalesPromptName), 0, TaxClassID, UpsellDiscMultiplier)" disable-output-escaping="yes" />
                        </xsl:otherwise>
                    </xsl:choose>

                    <br/>
<!--                    <input type="checkbox" id="Upsell" name="Upsell" value="{ProductID}" >
                      <xsl:if test="number($UpsellProductsCount) &gt; 0">
                            <xsl:attribute name="OnClick">UpsellClick(this);</xsl:attribute>
                        </xsl:if>
                    </input>-->  
                </td>
            </xsl:template>


            <xsl:template name="FillerCells">
                <xsl:param name="cellCount"/>
                <xsl:param name="CellWidth" select="100 div $UpsellProductsGridColWidth" />
                <td width="{$CellWidth}%">&#160;</td>
                <xsl:if test="$cellCount > 1">
                    <xsl:call-template name="FillerCells">
                        <xsl:with-param name="cellCount" select="$cellCount - 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:template>


        </xsl:stylesheet>
    </PackageTransform>
</package>

