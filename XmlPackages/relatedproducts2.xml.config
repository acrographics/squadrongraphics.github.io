<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Related Products" debug="false" includeentityhelper="false">

	<!-- ###################################################################################################### -->
	<!-- Copyright AspDotNetStorefront.com, 1995-2007.  All Rights Reserved.					                -->
	<!-- http://www.aspdotnetstorefront.com														                -->
	<!-- For details on this license please visit  the product homepage at the URL above.		                -->
	<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
	<!-- $Header: /Web/XmlPackages/relatedproducts.xml.config 1                12/30/05 2:33p Administrator $	        -->
	<!--                                                                                                        -->
	<!-- ###################################################################################################### -->


    <query name="RelatedItems" rowElementName="Item">
        <sql>
            <![CDATA[
	        DECLARE @custlevelcount int, @CustomerLevelFilteringIsAscending bit, @FilterProductsByCustomerLevel tinyint
            SELECT @custlevelcount = si.rows from sysobjects so with (nolock) join sysindexes si with (nolock) on so.id = si.id where so.id = object_id('ProductCustomerLevel') and si.indid < 2 and type = 'u'
            SELECT @FilterProductsByCustomerLevel = case ConfigValue when 'true' then 1 else 0 end FROM dbo.AppConfig WHERE [Name] = 'FilterProductsByCustomerLevel'

	        SET @CustomerLevelFilteringIsAscending  = 0
	        SELECT @CustomerLevelFilteringIsAscending  = case configvalue when 'true' then 1 else 0 end
	        FROM appConfig
	        WHERE name like 'CustomerLevelFilteringIsAscending '
            
            declare @relatedprods varchar(8000)
            select @relatedprods = replace(cast(relatedproducts as varchar(8000)), ' ', '') from dbo.product with (nolock) where productid = @productid

            select * 
            from dbo.product p with (nolock) 
                join dbo.split(@relatedprods, ',') rp on p.productid = cast(rp.items as int) 
                left join dbo.productcustomerlevel pcl on p.productid = pcl.productid
            where published = 1 and deleted = 0 
                and case 
                     when @FilterProductsByCustomerLevel = 0 then 1
                     when @CustomerLevelFilteringIsAscending = 1 and pcl.CustomerLevelID <= @CustomerLevelID or pcl.CustomerLevelID is null then 1 
                     when @CustomerLevelID=0 and pcl.CustomerLevelID is null then 1
                     when @CustomerLevelID is null or @custlevelcount = 0 then 1 
                     when pcl.CustomerLevelID = @CustomerLevelID or pcl.CustomerLevelID is null then 1 
                     else 0
			        end  = 1
            ]]>
        </sql>
        <queryparam paramname="@productid"       paramtype="runtime" requestparamname="productid"       sqlDataType="int" defvalue="0"  validationpattern="" />
        <queryparam paramname="@CustomerLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
    </query>


    <PackageTransform>
        <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
                        xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
          <xsl:output method="html" omit-xml-declaration="yes" />

            <xsl:param name="RelatedProductsGridColWidth" select="aspdnsf:AppConfig('RelatedProductsGridColWidth')"></xsl:param>


            <xsl:template match="/">

                <!--  Uncomment this if you want the related prodcuts in a dropdown list
                <xsl:if test="count(/root/RelatedItems/Item) &gt; 0">
                    <script>
                        function gotoproduct(url)
                        {
                            if(url != '') top.location.href = url;
                        }
                    </script>
                    <b>Related Products:&#0160;</b>
                    <select name="relatedproducts" id="relatedproducts" onchange="gotoproduct(this.value)">
                        <option value="">Select a Product</option>
                        <xsl:for-each select="/root/RelatedItems/Item">
                            <option value="{aspdnsf:ProductLink(ProductID, SEName, 'false', '')}">
                                <xsl:value-of select="aspdnsf:GetMLValue(Name)"/>
                            </option>
                        </xsl:for-each>
                    </select>
                </xsl:if>
                -->
                <xsl:if test="count(/root/RelatedItems/Item) &gt; 0">
                    <table width="100%" cellpadding="2" cellspacing="0" border="0" style="border-style: solid; border-width: 0px; border-color: #{aspdnsf:AppConfig('HeaderBGColor')};" >
                        <tr>
                            <td align="left" valign="top">
                                <img src="{aspdnsf:LocateImageURL(concat('skins/Skin_', /root/System/SkinID, '/images/relatedproducts.gif'))}" border="0"/><br/>
                                <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{aspdnsf:AppConfig('BoxFrameStyle')}">
                                    <tr>
                                        <td align="left" valign="top" class="RelatedProductsBoxStyle">
                                            <p><b><xsl:value-of select="/root/Runtime/teaser" /></b></p>
                                            <xsl:choose>
                                                <xsl:when test="aspdnsf:StrToLower(aspdnsf:AppConfig('RelatedProductsFormat')) = 'grid'">
                                                    <xsl:apply-templates select="/root/RelatedItems/Item" />
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <table width="100%">
                                                        <xsl:for-each select="/root/RelatedItems/Item">
                                                            <tr>
                                                                <td width="100%">
                                                                    <table width="100%">
                                                                        <tr>
                                                                            <td valign="center">
                                                                                <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                    <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFileNameOverride, SKU, 'icon', 0)" disable-output-escaping="yes"/>
                                                                                </a>
                                                                            </td>
                                                                            <td width="100%">
                                                                                <table width="100%">
                                                                                    <tr><td><a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}"><xsl:value-of select="aspdnsf:GetMLValue(Name)" disable-output-escaping="yes" /></a></td></tr>
                                                                                    <tr><td><span class="a2"><xsl:value-of select="aspdnsf:GetMLValue(Description)" disable-output-escaping="yes" /></span></td></tr>
                                                                                    <tr><td><div class="a1" style="PADDING-BOTTOM: 10px; PADDING-TOP: 10px;"><a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}"><xsl:value-of select="aspdnsf:StringResource('common.cs.33')" disable-output-escaping="yes" /></a></div></td></tr>
                                                                                </table>
                                                                            </td>
                                                                        </tr>
                                                                    </table>
                                                                    <xsl:if test="position() != last()"><hr size="1" class="LightCellText"/></xsl:if>
                                                                </td>
                                                            </tr>
                                                        </xsl:for-each>
                                                    </table>
                                                </xsl:otherwise>
                                            </xsl:choose>

                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </xsl:if>
            </xsl:template>

            <xsl:template match="Item">
					<xsl:variable name="delta">
						<xsl:choose>
							<xsl:when test="(count(/root/RelatedItems/Item) mod number($RelatedProductsGridColWidth)) = 0">0</xsl:when>
							<xsl:otherwise><xsl:value-of select="number($RelatedProductsGridColWidth)-(count(/root/RelatedItems/Item) mod number($RelatedProductsGridColWidth))"/></xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="rows" select="ceiling(count(/root/RelatedItems/Item) div number($RelatedProductsGridColWidth))" />

                <xsl:if test="position() mod $RelatedProductsGridColWidth = 1">
                    <tr>
                     <xsl:for-each select=". | following-sibling::*[position() &lt; $RelatedProductsGridColWidth]">
                        <xsl:call-template name="ProductCell"></xsl:call-template>
                     </xsl:for-each>
                    <xsl:if test="ceiling(position() div  number($RelatedProductsGridColWidth)) = $rows and $delta &gt; 0">
                        <xsl:call-template name="FillerCells">
                            <xsl:with-param name="cellCount" select="$delta" />
                        </xsl:call-template>
                    </xsl:if>
                    </tr>
                </xsl:if>

            </xsl:template>

            <xsl:template name="ProductCell">

                <xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>


                <td align="center" valign="top">
                    <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                        <xsl:value-of select="aspdnsf:LookupImage(ProductID, 'product', 'icon', 1)" disable-output-escaping="yes"/>
                    </a>
                    <br/>
                    <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                        <xsl:value-of select="$pName" disable-output-escaping="yes"/>
                    </a>
                </td>
            </xsl:template>


            <xsl:template name="FillerCells">
                <xsl:param name="cellCount"/>
                <xsl:param name="CellWidth" select="100 div $RelatedProductsGridColWidth" />
                <td width="{$CellWidth}%">&#160;</td>
                <xsl:if test="$cellCount > 1">
                    <xsl:call-template name="FillerCells">
                        <xsl:with-param name="cellCount" select="$cellCount - 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:template>

            
        </xsl:stylesheet>
    </PackageTransform>
</package>

