<?xml version="1.0" encoding="utf-8" ?>
<package displayname="Kit Product" version="2.1" debug="false" includeentityhelper="true">

	<!-- ###################################################################################################### -->
	<!-- Copyright AspDotNetStorefront.com, 1995-2007.  All Rights Reserved.					                -->
	<!-- http://www.aspdotnetstorefront.com														                -->
	<!-- For details on this license please visit  the product homepage at the URL above.		                -->
	<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
	<!-- $Header: /v6.1/Web/XmlPackages/entity.kitproduct.xml.config 1     12/30/05 2:33p Administrator $	    -->
	<!--                                                                                                        -->
	<!-- ###################################################################################################### -->

    <query name="Products" rowElementName="Product">
        <sql>
            <![CDATA[
                SELECT p.*, pv.VariantID, pv.price, isnull(pv.saleprice, 0) saleprice, isnull(pv.colors, '') Colors,
				case when pcl.productid is null then 0 else isnull(e.Price, 0) end ExtendedPrice
                FROM dbo.PRODUCT p 
                    join dbo.PRODUCTVARIANT pv on p.ProductID = pv.ProductID 
                    left join dbo.ProductCustomerLevel pcl on p.ProductID = pcl.ProductID
					left join ExtendedPrice e on pv.VariantID=e.VariantID and e.CustomerLevelID=@CustomerLevelID
                where p.ProductID = @ProductID 
                    and pv.isdefault = 1
                    and case 
                            when @FilterProductsByCustomerLevel = 'false' then 1
                            when @CustomerLevelFilteringIsAscending = 'true' and (pcl.CustomerLevelID <= @CustomerLevelID or pcl.CustomerLevelID is null) then 1 
				            when @CustomerLevelID=0 and pcl.CustomerLevelID is null then 1
                            when pcl.CustomerLevelID = @CustomerLevelID  or pcl.CustomerLevelID is null then 1 
                            else 0
                        end  = 1
            ]]>
        </sql>
        <queryparam paramname="@ProductID" paramtype="request" requestparamname="ProductID" sqlDataType="int" defvalue="0" validationpattern="^\d{1,10}$" />
        <queryparam paramname="@CustomerLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
        <queryparam paramname="@FilterProductsByCustomerLevel" paramtype="appconfig" requestparamname="FilterProductsByCustomerLevel" sqlDataType="varchar" defvalue="false"  validationpattern="" />
        <queryparam paramname="@CustomerLevelFilteringIsAscending" paramtype="appconfig" requestparamname="CustomerLevelFilteringIsAscending" sqlDataType="varchar" defvalue="false"  validationpattern="" />
    </query>
    <query name="KitItems" rowElementName="Item">
        <sql>
            <![CDATA[
                SELECT * FROM kitgroup
                where ProductID = @ProductID
                ORDER BY DisplayOrder
            ]]>
        </sql>
        <queryparam paramname="@ProductID" paramtype="request" requestparamname="ProductID" sqlDataType="int" defvalue="0" validationpattern="^\d{1,10}$" />
    </query>
    <PackageTransform>
        <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
            <xsl:output method="html" omit-xml-declaration="yes" />

            <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
            <xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />

            <xsl:param name="SecID">
                <xsl:choose>
                    <xsl:when test="count(/root/QueryString/sectionid) &gt; 0">
                        <xsl:value-of select="/root/QueryString/sectionid" />
                    </xsl:when>
                    <xsl:otherwise>0</xsl:otherwise>
                </xsl:choose>
            </xsl:param>


            <xsl:param name="CatID">
                <xsl:choose>
                    <xsl:when test="count(/root/QueryString/categoryid) &gt; 0">
                        <xsl:value-of select="/root/QueryString/categoryid" />
                    </xsl:when>
                    <xsl:otherwise>0</xsl:otherwise>
                </xsl:choose>
            </xsl:param>


            <xsl:param name="ManID">
                <xsl:choose>
                    <xsl:when test="count(/root/QueryString/manufacturerid) &gt; 0">
                        <xsl:value-of select="/root/QueryString/manufacturerid" />
                    </xsl:when>
                    <xsl:otherwise>0</xsl:otherwise>
                </xsl:choose>
            </xsl:param>

            <xsl:param name="CartRecID">
                <xsl:choose>
                    <xsl:when test="/root/QueryString/cartrecid">
                        <xsl:value-of select="/root/QueryString/cartrecid" />
                    </xsl:when>
                    <xsl:otherwise>0</xsl:otherwise>
                </xsl:choose>
            </xsl:param>
            
                
            <xsl:template match="/">
                <xsl:choose>
                    <xsl:when test="/root/Products/Product/IsAKit='0'">
                        <b>This XMLPackage is designed to work with Kit products only</b>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:apply-templates select="/root/Products/Product"></xsl:apply-templates>
                    </xsl:otherwise>
                </xsl:choose>                
            </xsl:template>

            <xsl:template match="Product">
                <xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>
                <xsl:param name="pDescription" select="aspdnsf:GetMLValue(Description)"></xsl:param>
                <xsl:param name="HidePriceUntilCart" select="HidePriceUntilCart" />
                <xsl:param name="ProductID" select="ProductID" />
                <xsl:param name="q"><xsl:if test="$CartRecID&gt;0">?CartRecID=<xsl:value-of select="$CartRecID" /></xsl:if></xsl:param>
				<xsl:param name="EntityID"><xsl:value-of select="/root/Runtime/EntityID"/></xsl:param>
				<xsl:param name="EntityName"><xsl:value-of select="/root/Runtime/EntityName"/></xsl:param>

                <table border="0" cellpadding="0" cellspacing="4" width="100%">

                    <tr>
                        <td align="center" valign="top" width="40%">
                            <xsl:value-of select="aspdnsf:LookupImage(ProductID, 'product', 'medium', 1)" disable-output-escaping="yes"/>
                        </td>
                        <td align="left" valign="top" >
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td align="right">
                                        <xsl:value-of select="aspdnsf:ProductNavLinks(ProductID, /root/Runtime/EntityID, /root/Runtime/EntityName, /root/EntityHelpers/*[name()=/root/Runtime/EntityName]/descendant::Entity[EntityID=/root/Runtime/EntityID]/SEName, 0, 1, 1)" disable-output-escaping="yes" />
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" valign="top" width="40%">
                                        <div  class="ProductNameText">
                                            <xsl:value-of select="aspdnsf:Decode($pName)" disable-output-escaping="yes"/>
                                        </div>
                                        <xsl:value-of select="aspdnsf:ProductSpecsLink(ProductID, SpecsInline, SpecTitle, SKU, SpecCall)" disable-output-escaping="yes" />
                                        <br/>
                                        <xsl:value-of select="aspdnsf:EmailProductToFriend(ProductID, $CatID)" disable-output-escaping="yes"/>
                                        <div align="left">
                                            <xsl:value-of select="aspdnsf:Decode($pDescription)" disable-output-escaping="yes"/>
                                        </div>
                                        <xsl:value-of select="aspdnsf:ShowQuantityDiscountTable(ProductID)" disable-output-escaping="yes" />
                                        <xsl:value-of select="aspdnsf:ShowInventoryTable(ProductID)" disable-output-escaping="yes" />
                                    </td>
                                </tr>
                                <tr valign="top">
                                    <td height="10"></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
                <hr size="1" color="#666666" />
                <br clear="all" />
                <xsl:value-of select="aspdnsf:GetJSPopupRoutines()" disable-output-escaping="yes" />
												<span>
													<xsl:attribute name="id">KitPrice_<xsl:value-of select="ProductID"/></xsl:attribute>
                <xsl:value-of select="aspdnsf:GetKitPrice(ProductID, price, saleprice,ExtendedPrice, HidePriceUntilCart, Colors, $CartRecID, TaxClassID)" disable-output-escaping="yes" />
				</span>

                <script type="text/javascript">
                    <![CDATA[
                    function deleteimage(itemID, el)
                    {
                        el.innerHTML='';
                        var fn = document.getElementById('FileNameH_'+itemID);
                        var imgfn = document.getElementById('Img_'+itemID);
                        fn.value='';
                        imgfn.style.display ='none';
                    }
                ]]>
                </script>
                
                
                <form method="post" enctype="multipart/form-data">
                    <xsl:attribute name="action"><xsl:value-of select="aspdnsf:ProductLink(ProductID, SEName, 0, '')" /><xsl:value-of select="$q" /></xsl:attribute>
                    <input type="hidden" name="IsKitSubmit" value="true" />
                    <input type="hidden" name="CartRecID" value="{$CartRecID}" />
                    <xsl:for-each select="/root/KitItems/Item">
                        <xsl:variable name="vName" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
                        <xsl:variable name="vDescription" select="aspdnsf:GetMLValue(Description)"></xsl:variable>
                        <xsl:value-of select="aspdnsf:GetKitItemOptions($ProductID, KitGroupID, IsRequired, $vName, $vDescription, KitGroupTypeID, $HidePriceUntilCart, number($CartRecID), /root/Products/Product/TaxClassID)" disable-output-escaping="yes" />
                    </xsl:for-each>

                    <div align="center">
					    <br/>
                        
                        <xsl:choose>
					        <xsl:when test="$HidePriceUntilCart=0">
                                <input>
                                    <xsl:choose>
                                        <xsl:when test="$CartRecID=0">
                                            <xsl:attribute name="type">submit</xsl:attribute>
                                            <xsl:attribute name="value"><xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.17')"/></xsl:attribute>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="type">submit</xsl:attribute>
                                            <xsl:attribute name="value"><xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.40')"/></xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </input>
						    </xsl:when>
						    <xsl:otherwise>
                                <input>
			                        <xsl:attribute name="type">submit</xsl:attribute>
                                    <xsl:attribute name="value"><xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.18')"/></xsl:attribute>
                                </input>
                            </xsl:otherwise>
					    </xsl:choose>
					</div>
                </form>
				<div>
				<br/>
		    <xsl:value-of select="aspdnsf:ShowUpsellProducts(ProductID)" disable-output-escaping="yes"/>
                    <xsl:value-of select="aspdnsf:RelatedProducts(ProductID)" disable-output-escaping="yes"/>
                    <xsl:value-of select="aspdnsf:ProductSpecs(ProductID, 1, SpecsInline, SpecCall, 400)" disable-output-escaping="yes"/>
                    <xsl:value-of select="aspdnsf:ProductRatings(ProductID, 0, 0, 0, 1)" disable-output-escaping="yes"/>
				</div>
            </xsl:template>
        </xsl:stylesheet>
    </PackageTransform>
</package>
