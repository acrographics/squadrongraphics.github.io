<?xml version="1.0" encoding="utf-8" ?>
<!-- ###################################################################################################### -->
<!-- Copyright AspDotNetStorefront.com, 1995-2007.  All Rights Reserved.					                -->
<!-- http://www.aspdotnetstorefront.com														                -->
<!-- For details on this license please visit  the product homepage at the URL above.		                -->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
<!-- $Header: /v6.1/Web/Admin/XmlPackages/feed.nextopia.xml.config 1     12/30/05 2:33p Administrator $	   -->
<!-- ###################################################################################################### -->
<package displayname="Google Base RSS 2.0 Feed" version="2.1" debug="false" includeentityhelper="false">
	<query name="Products" rowElementName="Product">
		<sql>
			<![CDATA[
			select p.productid, p.name, isnull(pv.name, '') VariantName, p.description, p.sename, p.ImageFileNameOverride, p.SKU, isnull(p.FroogleDescription, '') ProductFroogleDescription, p.SEKeywords,
                pv.price, isnull(pv.saleprice, 0) saleprice, isnull(pv.FroogleDescription, '') VariantFroogleDescription, isnull(pv.description, '') VariantDescr
			from product p join productvariant pv on p.productid = pv.productid
			where p.IsSystem=0 and p.deleted = 0 and p.published = 1 and p.ExcludeFromPriceFeeds = 0 and pv.isdefault = 1
			]]>
		</sql>
	</query>
	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf"   xmlns:g="http://base.google.com/ns/1.0" exclude-result-prefixes="aspdnsf">
			<xsl:output method="xml" omit-xml-declaration="no" encoding="utf-8" indent="no" />

			<xsl:param name="EntityName">
				<xsl:value-of select="/root/QueryString/entity" />
			</xsl:param>

			<xsl:param name="ShowInGrid">true</xsl:param>
			<xsl:param name="GridCols">4</xsl:param>
            <xsl:param name="UseDescr" select="aspdnsf:AppConfig('Froogle_UseDescriptionsIfFroogleDescEmpty')" />

            <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
			<xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />

			<xsl:template match="/">
                <rss version="2.0">
                    <channel>
                        <title><xsl:value-of select="aspdnsf:AppConfig('StoreName')" /></title>
                        <link><xsl:value-of select="/root/System/StoreUrl" /></link>
                        <description><xsl:value-of select="aspdnsf:AppConfig('RSSChannelDescr')" /></description>
                        <language><xsl:value-of select="$WebConfigLocaleSetting" /></language> 
                        <pubDate><xsl:value-of select="/root/System/CurrentDateTime" /></pubDate>
                        <lastBuildDate><xsl:value-of select="/root/System/CurrentDateTime" /></lastBuildDate>
                        <xsl:apply-templates select="/root/Products/Product" />
                    </channel>
                </rss>
            </xsl:template>
			
			<xsl:template match="Product">
                <xsl:param name="ProductName" select="aspdnsf:GetMLValue(name)"></xsl:param>
                <xsl:param name="ProductVariantName" select="aspdnsf:GetMLValue(VariantName)"></xsl:param>
                <xsl:param name="ProductDescr" select="aspdnsf:GetMLValue(description)"></xsl:param>
                <xsl:param name="VariantDescr" select="aspdnsf:GetMLValue(VariantDescr)"></xsl:param>
                <xsl:param name="ProductFroogleDescription" select="aspdnsf:GetMLValue(ProductFroogleDescription)"></xsl:param>
                <xsl:param name="VariantFroogleDescription" select="aspdnsf:GetMLValue(VariantFroogleDescription)"></xsl:param>
                <xsl:param name="ItemImage" select="aspdnsf:ProductImageUrl(productid, ImageFileNameOverride, SKU, 'medium', 1)"></xsl:param>

                <item>
                    <title>
                        <xsl:value-of select="$ProductName" />
                    </title>
                    <link>
                        <xsl:value-of select="/root/System/StoreUrl" />
                        <xsl:value-of select="aspdnsf:ProductLink(productid, sename, 0, '')" />
                    </link>
                    <description>
                        <xsl:choose>
                            <xsl:when test="$VariantFroogleDescription!=''">
                                <xsl:value-of select="$VariantFroogleDescription" />
                            </xsl:when>
                            <xsl:when test="$ProductFroogleDescription!=''">
                                <xsl:value-of select="$ProductFroogleDescription" />
                            </xsl:when>
                            <xsl:when test="$VariantDescr!=''">
                                <xsl:value-of select="$VariantDescr" />
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$ProductDescr" />
                            </xsl:otherwise>
                        </xsl:choose>
                    </description>
                    <g:image_link>
                        <xsl:if test="not(contains($ItemImage, 'nopicture'))">
                            <xsl:value-of select="$ItemImage" />
                        </xsl:if>
					 </g:image_link>
					 <g:price>
                        <xsl:choose>
                            <xsl:when test="number(saleprice)=0">
                                <xsl:value-of select="format-number(price, '###0.00')" />
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="format-number(saleprice, '###0.00')" />
                            </xsl:otherwise>
                        </xsl:choose>
                     </g:price>
                     <xsl:value-of select="aspdnsf:SplitString(aspdnsf:GetMLValue(SEKeywords), ',', 'g:label')" disable-output-escaping="yes"  />
				</item>
			</xsl:template>
			
		</xsl:stylesheet>

	</PackageTransform>
</package>