<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Style Browser" debug="false" includeentityhelper="true">

	<!-- ###################################################################################################### -->
	<!-- Copyright AspDotNetStorefront.com, 1995-2007.  All Rights Reserved.					                -->
	<!-- http://www.aspdotnetstorefront.com														                -->
	<!-- For details on this license please visit  the product homepage at the URL above.		                -->
	<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
	<!-- $Header: /v6.1/Web/XmlPackages/product.simpleproduct.xml.config 1     12/30/05 2:33p Administrator $	        -->
	<!--                                                                                                        -->
	<!-- ###################################################################################################### -->

    <query name="CategoryBrowser" rowElementName="CategoryProduct">
        <sql>
            <![CDATA[
                select 'Category' EntityType, p.Name productname, p.productid, c.name entityname, c.categoryid entityid, pc.DisplayOrder
                from dbo.product p join dbo.productcategory pc on p.productid = pc.productid join category c on c.categoryid = pc.categoryid
                where p.ShowInProductBrowser=1 and p.IsAPack=0 and p.IsAKit=0 and p.Deleted=0 and p.Published=1 and c.ShowInProductBrowser=1
                    and @entityname = 'category'
                UNION
                select 'Section' EntityType, p.Name productname, p.productid, s.name entityname, s.sectionid entityid, ps.DisplayOrder
                from dbo.product p join dbo.productsection ps on p.productid = ps.productid join dbo.section s on s.sectionid = ps.sectionid
                where p.ShowInProductBrowser=1 and p.IsAPack=0 and p.IsAKit=0 and p.Deleted=0 and p.Published=1 and s.ShowInProductBrowser=1
                    and @entityname = 'section'
				order by entityname, pc.DisplayOrder, productname
            ]]>
        </sql>
        <queryparam paramname="@entityname" paramtype="request" requestparamname="entityname" sqlDataType="varchar" defvalue="0" validationpattern="" />
    </query>


    <PackageTransform>
        <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
            <xsl:output method="html" omit-xml-declaration="yes" />

            <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
            <xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />
            <xsl:param name="SecID">
                <xsl:choose>
                    <xsl:when test="aspdnsf:ToUpper(/root/QueryString/entityname) = 'SECTION'">
                        <xsl:value-of select="/root/QueryString/sourceentityid" />
                    </xsl:when>
                	<xsl:otherwise>0</xsl:otherwise>
                </xsl:choose>
            </xsl:param>
            
            <xsl:param name="CatID">
                <xsl:choose>
                    <xsl:when test="aspdnsf:ToUpper(/root/QueryString/entityname) = 'CATEGORY'">
                        <xsl:value-of select="/root/QueryString/sourceentityid" />
                    </xsl:when>
                    <xsl:when test="/root/QueryString/entityname = ''">
                        <xsl:value-of select="/root/EntityHelpers/*[name()='Category']/Entity[1]/EntityID" />
                    </xsl:when>
                    <xsl:otherwise>0</xsl:otherwise>
                </xsl:choose>
            </xsl:param>

            <xsl:param name="DisplayProductID">
                <xsl:choose>
                	<xsl:when test="number(/root/QueryString/showproductid) &gt; 0"><xsl:value-of select="/root/QueryString/showproductid" /></xsl:when>
                	<xsl:otherwise><xsl:value-of select="/root/CategoryBrowser/CategoryProduct[1]/productid" /></xsl:otherwise>
                </xsl:choose>
            </xsl:param>
            <xsl:param name="PBHeight">
                <xsl:choose>
                	<xsl:when test="number(aspdnsf:AppConfig('ProductBrowserHeight')) &gt; 0"><xsl:value-of select="number(aspdnsf:AppConfig('ProductBrowserHeight'))-10" /></xsl:when>
                	<xsl:otherwise>488</xsl:otherwise>
                </xsl:choose>
            </xsl:param>
            
            <xsl:key name="cbrowser" match="CategoryProduct" use="entityid"/>

            <xsl:param name="StyleBrowserHeight">
                <xsl:choose>
                    <xsl:when test="number(aspdnsf:AppConfig('ProductBrowserHeight')) &gt; 0">
                        <xsl:value-of select="aspdnsf:AppConfig('ProductBrowserHeight')-10" />
                    </xsl:when>
                    <xsl:otherwise>488</xsl:otherwise>
                </xsl:choose>
            </xsl:param>

            <xsl:template match="/">
                <xsl:comment>Copyright 1995-2007 AspDotNetStorefront.com</xsl:comment>

                <div align="left">
                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                        <tr>
                            <td width="26%" valign="top" align="left">
                                <div align="left" style="height:{$StyleBrowserHeight}px;overflow:auto">
                                    <xsl:choose>
                                        <xsl:when test="$CatID>0">
                                            <xsl:apply-templates select="/root/EntityHelpers/*[name()='Category']/descendant::Entity" />
                                        </xsl:when>
                                        <xsl:when test="$SecID>0">
                                            <xsl:apply-templates select="/root/EntityHelpers/*[name()='Section']/descendant::Entity" />
                                        </xsl:when>
                                    </xsl:choose>

                                </div>
                            </td>
                            <td width="1%" valign="top" align="left"></td>
                            <td width="73%" valign="top" align="left">
                                <iframe height="{$PBHeight}" id="pb" name="pb" scrolling="auto" marginwidth="0" marginheight="0" frameborder="0" vspace="0" hspace="0" style="width:100%; display:block; border-width: 1px; border-style: solid; border-color: #DDDDDD">
                                    <xsl:attribute name="src">pb.aspx?type=<xsl:value-of select="/root/QueryString/type" />&amp;PackID=<xsl:value-of select="/root/QueryString/packid" />&amp;ProductID=<xsl:value-of select="$DisplayProductID" />&amp;EntityID=<xsl:value-of select="/root/QueryString/sourceentityid" />&amp;EntityName=<xsl:value-of select="/root/QueryString/entityname"/>&amp;cartrecid=<xsl:value-of select="/root/QueryString/cartrecid"/>&amp;isfull=<xsl:value-of select="/root/QueryString/isfull" /></xsl:attribute>
                                </iframe>
                            </td>
                            <td width="1%" valign="top" align="left"></td>
                        </tr>
                    </table>
                </div>
            </xsl:template>

            
            <xsl:template match="Entity">
                <xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>
                <div class="SBCatName"><xsl:value-of select="$pName" /></div>

                <xsl:call-template name="categorybrowser">
                    <xsl:with-param name="catid" select="EntityID" />
                </xsl:call-template>
                <br />
            </xsl:template>
            
            <xsl:template name="categorybrowser">
                <xsl:param name="catid" />
                <xsl:for-each select="key('cbrowser', $catid)">
                    <xsl:variable name="pName" select="aspdnsf:GetMLValue(productname)"></xsl:variable>
                    &#160;&#160;
                    <a class="SBProdName" target="pb">
                        <xsl:attribute name="href">pb.aspx?type=<xsl:value-of select="/root/QueryString/type" />&amp;PackID=<xsl:value-of select="/root/QueryString/packid" />&amp;ProductID=<xsl:value-of select="productid" />&amp;EntityID=<xsl:value-of select="/root/QueryString/sourceentityid"/>&amp;cartrecid=<xsl:value-of select="/root/QueryString/cartrecid" />&amp;EntityName=<xsl:value-of select="/root/QueryString/entityname" />&amp;isfull=<xsl:value-of select="/root/QueryString/isfull" /></xsl:attribute>
                        <xsl:value-of select="$pName"  disable-output-escaping="yes" />
                    </a><br />
                </xsl:for-each>
            </xsl:template>
            
        </xsl:stylesheet>
    </PackageTransform>
</package>
